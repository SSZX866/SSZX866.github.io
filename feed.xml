

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://sszx866.github.io/</id>
  <title>伸手摘星</title>
  <subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle>
  <updated>2021-04-14T15:14:22+08:00</updated>
  <author>
    <name>Weijia Li</name>
    <uri>https://sszx866.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://sszx866.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en-US"
    href="https://sszx866.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Weijia Li </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Leetcode</title>
    <link href="https://sszx866.github.io/posts/LeetCode/" rel="alternate" type="text/html" title="Leetcode" />
    <published>2021-04-14T00:00:00+08:00</published>
  
    <updated>2021-04-14T00:00:00+08:00</updated>
  
    <id>https://sszx866.github.io/posts/LeetCode/</id>
    <content src="https://sszx866.github.io/posts/LeetCode/" />
    <author>
      <name>Weijia Li</name>
    </author>

  
    
  

  
    <summary>
      





      LeetCode

一、Note

1.动态规划


  题目特点


1.计数

​	-有多少种方式走到右下角

​	-有多少种方式选出k个数使得和是Sum

2.求最大值最小值

​	-从左上角走到右下角路径的最大数字和

​	-最长上升子序列长度

3.求存在性

​	-取石子游戏，先手是否必胜

​	-能不能选出k个数使得和是sum


  计算步骤


1.确定状态


  最后一步（最优策略中使用的最后一枚硬币ak）
  化成子问题（最少的硬币拼出更小的面值27-ak）


2.转移方程（列出递归方程）


  f[x]=min{f[x-2]+1,f[x-5]+1,f[x-7]+1}


3.确定初始条件和边界情况

若初始值用转移方程算不出，则需手动定义初始条件F[0]

4.计算顺序

多为从小到大F[0],F[1],F[2],…

二维多为从上到下，从左到右

目的...
    </summary>
  

  </entry>

  
  <entry>
    <title>Python</title>
    <link href="https://sszx866.github.io/posts/Python/" rel="alternate" type="text/html" title="Python" />
    <published>2021-04-13T00:00:00+08:00</published>
  
    <updated>2021-04-13T00:00:00+08:00</updated>
  
    <id>https://sszx866.github.io/posts/Python/</id>
    <content src="https://sszx866.github.io/posts/Python/" />
    <author>
      <name>Weijia Li</name>
    </author>

  
    
  

  
    <summary>
      





      Python学习笔记

1、内置函数（Built-in Functions）

set()

set() 函数创建一个无序不重复元素集，可进行关系测试，删除重复数据，还可以计算交集、差集、并集等。

参数说明：


  iterable – 可迭代对象对象；


&amp;gt;&amp;gt;&amp;gt;x = set('runoob')
&amp;gt;&amp;gt;&amp;gt; y = set('google')
&amp;gt;&amp;gt;&amp;gt; x, y
(set(['b', 'r', 'u', 'o', 'n']), set(['e', 'o', 'g', 'l']))   # 重复的被删除
({'n', 'u', 'o', 'b', 'r'}, {'e', 'l', 'g', 'o'}) #python3.7.9显示结果
&amp;gt;&amp;gt;&amp;gt; x &amp;amp; y         # 交集
set(['o'])
&amp;...
    </summary>
  

  </entry>

  
  <entry>
    <title>Selenium</title>
    <link href="https://sszx866.github.io/posts/Selenium/" rel="alternate" type="text/html" title="Selenium" />
    <published>2021-03-25T00:00:00+08:00</published>
  
    <updated>2021-03-25T00:00:00+08:00</updated>
  
    <id>https://sszx866.github.io/posts/Selenium/</id>
    <content src="https://sszx866.github.io/posts/Selenium/" />
    <author>
      <name>Weijia Li</name>
    </author>

  
    
  

  
    <summary>
      





      Selenium

一、CSS Selector

‘&amp;gt;’ 和 ‘空格’    ‘ &amp;gt;’ 表示子节点，’空格’ 表示后代

’#’表示id ‘.’表示css ‘,’ 组选择器可选取多个元素且优先级最低

:nth-child(x) 选取第x个子节点

:nth-last-child(x) 选取倒数第x个子节点

span:nth-of-type(1) 选取第一个标签为span的节点

span:nth-last-of-type(1) 选取倒数第一个标签为span的节点

#t1 :nth-child(odd/even) 选取id为t1下的奇数/偶数子节点

#t1 p:nth-child(odd/even) 选取id为t1下的标签为p的奇数/偶数节点

h3 + span 选取所有与h3相邻（兄弟）的span节点

h3 ~ span 选取所有在h3后所有的span节点（...
    </summary>
  

  </entry>

  
  <entry>
    <title>Appium</title>
    <link href="https://sszx866.github.io/posts/Appium/" rel="alternate" type="text/html" title="Appium" />
    <published>2021-03-23T00:00:00+08:00</published>
  
    <updated>2021-03-23T00:00:00+08:00</updated>
  
    <id>https://sszx866.github.io/posts/Appium/</id>
    <content src="https://sszx866.github.io/posts/Appium/" />
    <author>
      <name>Weijia Li</name>
    </author>

  
    
  

  
    <summary>
      





      Selenium

一、获取adb包名和activity

在cmd中执行

adb shell dumpsys activity recents | find "intent={"


会显示如下，最近的 几个 activity 信息，

intent={act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=tv.danmaku.bili/.ui.splash.SplashActivity}
intent={act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10000300cmp=com.huawei.android.launcher/.unihome.UniHome...
    </summary>
  

  </entry>

  
  <entry>
    <title>Scrapy</title>
    <link href="https://sszx866.github.io/posts/Scrapy/" rel="alternate" type="text/html" title="Scrapy" />
    <published>2021-03-13T00:00:00+08:00</published>
  
    <updated>2021-03-13T00:00:00+08:00</updated>
  
    <id>https://sszx866.github.io/posts/Scrapy/</id>
    <content src="https://sszx866.github.io/posts/Scrapy/" />
    <author>
      <name>Weijia Li</name>
    </author>

  
    
  

  
    <summary>
      





      Scrapy


  
    创建工程
  


scrapy startproject &amp;lt;name&amp;gt;



  
    创建爬虫
  


scrapy genspider &amp;lt;name&amp;gt; &amp;lt;domain&amp;gt;



  
    运行爬虫
  


scrapy crawl &amp;lt;spider&amp;gt;



  
    列出所有爬虫
  


scrapy list


主要修改 settings.py name.py pipelines.py三个文件


    </summary>
  

  </entry>

</feed>


